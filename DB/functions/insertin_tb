#!/bin/bash

function insert_into_table {
	read -p "Enter table name (-1 to back to menu) : " TBName
	if [[ $TBName = -1 ]]
	then
		break
	fi
	if [[ ! -e $TBName ]]
	then
		echo -e "${YELLOW}Table '$TBName' does not exist!${RESET}"
		continue
	fi
	while true
	do
	line=""
		for var in `cat .$TBName-MetaData`
		do
		
			colPK=`echo $var | cut -d : -f1`
			colName=`echo $var | cut -d : -f2`
			colType=`echo $var | cut -d : -f3`
			
			read -p "Please Enter $colName value (-1 to back to menu) : " value
			if [[ value = -1 ]]
			then
				break 1	
			fi
			if [[ -z "$value" ]]
			then
				clear
		    		echo -e "${RED}Column value cannot be empty. Please try again.${RESET}"
		    		continue 2
			fi
			if [[ colPK ]]
			then
   			if awk -F: -v val="$value" '$1 == val { found=1; exit } END { exit !found }' $TBName
   			then
				clear
				echo ""
	        		echo -e "${RED}Error duplicated value in primary key.. ${RESET}"
	        		continue 2
    				fi
    			fi

    			case $colType in
			"text")
			
				if [[ ! "$value" =~ ^[[:alpha:]]+$ || "$value" == "true" || "$value" == "false" ]]
				then
					clear 
					echo -e "${RED}$colName is a text not boolean type[true|false], only alphabets allowed${RESET}"
					continue 2
				fi
			;;
	
			"number")
			
				if [[ ! "$value" = [[:digit:]] ]]
				then
					clear 
					echo -e"${RED}$colName is a number, only digits allowed${RESET}"
					continue 2
				fi
			;;
			
			"boolean")
				if [[ "$value" != "true" && "$value" != "false" ]]
				then
					clear
					echo -e "${RED}$colName is a boolean, only true or false allowed${RESET}"
					continue 2
				fi
			;;
			*)
				echo -e "${RED}Error !${RESET}"

	        	;;
		        esac
			line=$line$value:
		done
		echo "${line::-1}" >> $TBName
		read -p "Insert another row (y/n) ?" again
		if [[ $again = n ]]
		then
		break 1
		fi
	done

}
